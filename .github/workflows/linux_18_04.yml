name: Build inside Ubuntu 18.04 Docker container

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Build Docker container
      - name: Build Docker container
        run: docker build -t my-linux-app .

      # Run Docker container
      - name: Run Docker container
        run: docker run --name my-build-container -v ${PWD}:/app -d my-linux-app tail -f /dev/null

      # Download the zip file
      - name: Download zip file
        run: docker exec my-build-container curl -L -o /app/assets/database/tipitaka_pali.zip https://dl.dropboxusercontent.com/s/svnrlo29dnblyad/tipitaka_pali.zip?dl=0

      # Extract the zip file
      - name: Extract zip file
        run: docker exec my-build-container unzip /app/assets/database/tipitaka_pali.zip -d /app/assets/database/

      # Delete the original zip file
      - name: Delete zip file
        run: docker exec my-build-container rm /app/assets/database/tipitaka_pali.zip

      # Run the split.sh script
      - name: Run split.sh script
        run: docker exec my-build-container bash /app/assets/database/split.sh

      # Build linux Flutter project
      - name: Build linux Flutter project
        run: docker exec my-build-container /bin/bash -c "cd /app && flutter pub get && flutter build linux --release"

      # Copy build files into AppDir
      - name: Copy build files into AppDir
        run: docker exec my-build-container /bin/bash -c "cd /app/TipitakaPaliReader.AppDir && cp -r /app/build/linux/x64/release/bundle/* ."

      # Download the AppImage tool
      - name: Download AppImage tool
        run: docker exec my-build-container /bin/bash -c "cd /app && wget https://github.com/AppImage/AppImageKit/releases/download/13/appimagetool-x86_64.AppImage && chmod +x appimagetool-x86_64.AppImage"

      # Build the AppImage
      - name: Build AppImage
        run: docker exec my-build-container /bin/bash -c "cd /app && ARCH=x86_64 ./appimagetool-x86_64.AppImage TipitakaPaliReader.AppDir/ tipitaka_pali_reader.AppImage"

      # Copy build artifacts from container
      - name: Copy build artifacts from container
        run: docker cp my-build-container:/app/tipitaka_pali_reader.AppImage .

      # Upload AppImage
      - name: Upload AppImage
        uses: actions/upload-artifact@v2
        with:
          name: linux-appimage
          path: tipitaka_pali_reader.AppImage
